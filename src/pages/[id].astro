---
import Layout from "../layouts/Layout.astro";
import colorData from "../data/colors.json";

export async function getStaticPaths() {
  return colorData.map((color) => {
    return {
      params: { id: color.name.toLowerCase() },
      props: { color },
    };
  });
}
const { id } = Astro.params;
const { color } = Astro.props;
---

<Layout title={`147 Colors | ${color.name}`}>
  <div
    class={`flow color ${color.theme}`.toLowerCase()}
    style={`background-color: ${color.name};`}
  >
    <h1>{color.name}</h1>
    <div class="color-btns">
      <button id="hex" onclick="copyHex()"
        ><span>HEX</span><span>#{color.hex}</span>
      </button>
      <button id="rgb" onclick="copyRGB()"
        ><span>RGB</span><span>{color.rgb}</span>
      </button>
    </div>

    <button class="back-link noButton">&larr; Back to the color grid</button>
  </div>
</Layout>

<style lang="scss">
  body {
    height: 100dvh;
    height: 100vh;
    width: 100dvw;
    width: 100vw;
    margin: 0;
    padding: var(--space-xl);
    display: grid;
    place-content: center;
    text-align: center;
  }

  .color {
    border: var(--space-s-l) solid white;
    width: 100dvw;
    width: 100vw;
    height: 100dvh;
    height: 100vh;
    display: grid;
    place-content: center;
    padding: var(--space-s-l);
  }

  h1 {
    font-size: var(--step-6, 2em);
    word-break: break-all;
  }

  .dark {
    color: white;

    a,
    button {
      color: white;
    }

    .color-btns button {
      background-color: rgba(255, 255, 255, 0.3);

      &:hover,
      &:focus {
        background-color: rgba(255, 255, 255, 0.4);
      }
    }
  }

  .light {
    color: black;

    a,
    button {
      color: black;
    }

    .color-btns button {
      background-color: rgba(0, 0, 0, 0.1);

      &:hover,
      &:focus {
        background-color: rgba(0, 0, 0, 0.2);
      }
    }
  }

  .color-btns {
    display: flex;
    gap: 2rem;

    button {
      border: 0;
      padding: var(--space-s);
      margin-right: 1rem;
      transition: 0.2s all ease-in-out;
      display: flex;
      gap: 1rem;

      &:last-child {
        margin-right: 0;
      }
    }
  }
</style>
